# name: Log Activities

# on:
#   push:
#     branches:
#       - main

# jobs:
#   log:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Fetch latest changes
#         run: |
#           git fetch --all

#       - name: Prepare Change Log
#         run: |
#           # Create or initialize the changelog.md file
#           if [ ! -f changelog.md ]; then
#             echo '# Change Log' > changelog.md
#             echo 'All notable changes to this project will be documented in this file.' >> changelog.md
#             echo '' >> changelog.md
#           fi

#       - name: Log Commit Message
#         run: |
#           DATE=$(date +%Y-%m-%d)
#           PUSH_ID="${{ github.sha }}"
#           COMMENT="${{ github.event.head_commit.message }}"
#           COMMITTER="${{ github.event.head_commit.committer.name }}"
#           CHANGES="${{ github.event.head_commit.message }}"

#           # Create a temporary file with the new log entry
#           echo "## $DATE" > new_log.md
#           echo '' >> new_log.md
#           echo "### Comment" >> new_log.md
#           echo "- $COMMENT" >> new_log.md
#           echo '' >> new_log.md
#           echo "### Changes" >> new_log.md
#           echo "- $CHANGES" >> new_log.md
#           echo '' >> new_log.md
#           echo "### Committed by" >> new_log.md
#           echo "- $COMMITTER" >> new_log.md
#           echo '' >> new_log.md
#           echo "### Push ID" >> new_log.md
#           echo "- $PUSH_ID" >> new_log.md
#           echo '' >> new_log.md

#           # Prepend the new log entry to the changelog.md
#           cat new_log.md >> changelog.md
#           rm new_log.md

#       - name: Add and Commit Log
#         run: |
#           git config --global user.name "github-actions[bot]"
#           git config --global user.email "github-actions[bot]@users.noreply.github.com"
#           git add changelog.md
#           git commit -m "Update changelog.md" || echo "No changes to commit"

#       - name: Push changes
#         env:
#           PAT_TOKEN: ${{ secrets.TOKEN }}
#         run: |
#           git remote set-url origin https://${PAT_TOKEN}@github.com/${{ github.repository }}.git
#           git push origin main


name: Update Changelog

on:
  push:
    branches:
      - main

jobs:
  update_changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Fetch latest changes
        run: |
          git fetch --all

      - name: Prepare Change Log
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo '# üìú Changelog' > CHANGELOG.md
            echo '> All notable changes to this project will be documented in this file.' >> CHANGELOG.md
            echo '' >> CHANGELOG.md
            echo '---' >> CHANGELOG.md
            echo '' >> CHANGELOG.md
          fi

      - name: Parse commit message
        id: commit
        run: |
          MESSAGE="${{ github.event.head_commit.message }}"
          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update Changelog
        run: |
          DATE=$(date +%Y-%m-%d)
          PUSH_ID="${{ github.sha }}"
          COMMITTER="${{ github.event.head_commit.committer.name }}"
          MESSAGE="${{ steps.commit.outputs.message }}"

          # Parse commit message for changelog entries
          ADDED=$(echo "$MESSAGE" | grep -i "^add:" | sed 's/^add://i' | sed 's/^/- /')
          CHANGED=$(echo "$MESSAGE" | grep -i "^change:" | sed 's/^change://i' | sed 's/^/- /')
          DEPRECATED=$(echo "$MESSAGE" | grep -i "^deprecate:" | sed 's/^deprecate://i' | sed 's/^/- /')
          REMOVED=$(echo "$MESSAGE" | grep -i "^remove:" | sed 's/^remove://i' | sed 's/^/- /')
          FIXED=$(echo "$MESSAGE" | grep -i "^fix:" | sed 's/^fix://i' | sed 's/^/- /')
          SECURITY=$(echo "$MESSAGE" | grep -i "^security:" | sed 's/^security://i' | sed 's/^/- /')

          # Create a temporary file with the new log entry
          echo "## üöÄ Release [\`${PUSH_ID:0:7}\`] - ${DATE}" > new_log.md
          echo "" >> new_log.md
          
          [ ! -z "$ADDED" ] && { echo "### ‚ú® Added" >> new_log.md; echo "$ADDED" >> new_log.md; echo "" >> new_log.md; }
          [ ! -z "$CHANGED" ] && { echo "### üîÑ Changed" >> new_log.md; echo "$CHANGED" >> new_log.md; echo "" >> new_log.md; }
          [ ! -z "$DEPRECATED" ] && { echo "### ‚ö†Ô∏è Deprecated" >> new_log.md; echo "$DEPRECATED" >> new_log.md; echo "" >> new_log.md; }
          [ ! -z "$REMOVED" ] && { echo "### üóëÔ∏è Removed" >> new_log.md; echo "$REMOVED" >> new_log.md; echo "" >> new_log.md; }
          [ ! -z "$FIXED" ] && { echo "### üêõ Fixed" >> new_log.md; echo "$FIXED" >> new_log.md; echo "" >> new_log.md; }
          [ ! -z "$SECURITY" ] && { echo "### üîí Security" >> new_log.md; echo "$SECURITY" >> new_log.md; echo "" >> new_log.md; }
          
          echo "### üë§ Committed by" >> new_log.md
          echo "\`$COMMITTER\`" >> new_log.md
          echo "" >> new_log.md
          echo "---" >> new_log.md
          echo "" >> new_log.md

          # Prepend the new log entry to the CHANGELOG.md
          cat new_log.md CHANGELOG.md > temp_changelog.md && mv temp_changelog.md CHANGELOG.md
          rm new_log.md

      - name: Commit and push if changed
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git diff --quiet && git diff --staged --quiet || (git commit -m "üìù Update CHANGELOG.md" && git push)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}